# TODO: delete, most of this is crap and should be updated

GASP:
#  parent_model: ['simple_WSDT']
  postproc:
    segm_pipeline_type: 'GASP'

MEAN:
  parent_model: ['GASP']
  postproc:
    GASP_kwargs:
        run_GASP_kwargs:
          linkage_criteria: 'mean'
          add_cannot_link_constraints: False

MAXconstr:
  parent_model: ['GASP']
  postproc:
    GASP_kwargs:
        run_GASP_kwargs:
          linkage_criteria: 'max'
          add_cannot_link_constraints: True
          merge_constrained_edges_at_the_end: True

MEANconstr:
  parent_model: ['GASP']
  postproc:
    GASP_kwargs:
        run_GASP_kwargs:
          linkage_criteria: 'mean'
          add_cannot_link_constraints: True
          merge_constrained_edges_at_the_end: True

SUM:
  parent_model: ['GASP']
  postproc:
    GASP_kwargs:
      use_logarithmic_weights: True
      run_GASP_kwargs:
        linkage_criteria: 'sum'
        add_cannot_link_constraints: False

SUMconstr:
  parent_model: ['GASP']
  postproc:
    GASP_kwargs:
      use_logarithmic_weights: True
      run_GASP_kwargs:
        linkage_criteria: 'sum'
        add_cannot_link_constraints: True
        merge_constrained_edges_at_the_end: True

Mutex:
  parent_model: ['GASP']
  postproc:
    GASP_kwargs:
        run_GASP_kwargs:
          linkage_criteria: 'mutex_watershed'
          add_cannot_link_constraints: False
          use_efficient_implementations: False

# This will give the same result, but in practice uses constraints:
Mutex_constr:
  parent_model: ['GASP']
  postproc:
    GASP_kwargs:
        run_GASP_kwargs:
          linkage_criteria: 'mutex_watershed'
          add_cannot_link_constraints: True
          merge_constrained_edges_at_the_end: True
          use_efficient_implementations: False


MutexEfficient:
  parent_model: ['GASP']
  postproc:
    GASP_kwargs:
        run_GASP_kwargs:
          linkage_criteria: 'mutex_watershed'
          use_efficient_implementations: True

# ---------------------------------------
WSDT:
  postproc:
    segm_pipeline_type: 'only_superpixel_generator'
    from_superpixels: True
    superpixel_generator_type: 'WSDT'


# ---------------------------------------

# SPECTRAL CLUSTERING CONFIGS:
spectral:
  postproc:
    segm_pipeline_type: 'spectral'

SPONGE_sym:
  parent_model: ['spectral']
  postproc:
    spectral_method_name: 'SPONGE-sym'

BNC:
  parent_model: ['spectral']
  postproc:
    spectral_method_name: 'BNC'

SPONGE:
  parent_model: ['spectral']
  postproc:
    spectral_method_name: 'SPONGE'

L_sym:
  parent_model: ['spectral']
  postproc:
    spectral_method_name: 'L-sym'
